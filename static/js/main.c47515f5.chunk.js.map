{"version":3,"sources":["images/profilepic.jpg","Components/Header.js","Components/About.js","Components/Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","this","props","data","name","occupation","description","city","networks","social","map","network","key","href","url","className","id","title","style","backgroundColor","React","Component","About","bio","email","resumeDownload","resumedownload","src","profilepic","alt","paddingLeft","textAlign","Resume","skillmessage","education","school","degree","graduated","work","company","years","App","state","foo","resumeData","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","alert","getResumeData","main","resume","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,wC,qMCoD5BC,G,6KAhDP,GAAGC,KAAKC,MAAMC,KACV,IAAIC,EAAOH,KAAKC,MAAMC,KAAKC,KACvBC,EAAaJ,KAAKC,MAAMC,KAAKE,WAC7BC,EAAcL,KAAKC,MAAMC,KAAKG,YAC9BC,EAAON,KAAKC,MAAMC,KAAKI,KACvBC,EAAWP,KAAKC,MAAMC,KAAKM,OAAOC,KAAI,SAASC,GAC/C,OAAO,wBAAIC,IAAKD,EAAQP,MAAM,uBAAGS,KAAMF,EAAQG,KAAK,uBAAGC,UAAWJ,EAAQI,iBAIlF,OACI,4BAAQC,GAAG,QACX,yBAAKA,GAAG,YAEJ,uBAAGD,UAAU,aAAaF,KAAK,YAAYI,MAAM,mBAAjD,mBACH,uBAAGF,UAAU,aAAaF,KAAK,QAAQI,MAAM,mBAA7C,mBAEG,yBAAKC,MAAO,CAACC,gBAAgB,YAC7B,wBAAIH,GAAG,MAAMD,UAAU,OACnB,wBAAIA,UAAU,WAAU,uBAAGA,UAAU,eAAeF,KAAK,SAAjC,SACxB,4BAAI,uBAAGE,UAAU,eAAeF,KAAK,UAAjC,UACJ,4BAAI,uBAAGE,UAAU,eAAeF,KAAK,WAAjC,WACJ,4BAAI,uBAAGE,UAAU,eAAeF,KAAK,cAAjC,UACJ,4BAAI,uBAAGE,UAAU,eAAeF,KAAK,SAAjC,YAMZ,yBAAKE,UAAU,cACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,uBAAd,OAAyCX,EAAzC,KACA,qCAAWG,EAAX,UAAuB,8BAAOF,GAA9B,KAAmDC,EAAnD,KACA,6BACA,wBAAIS,UAAU,UACTP,KAKb,uBAAGO,UAAU,cACT,uBAAGA,UAAU,eAAeF,KAAK,UAAS,uBAAGE,UAAU,4B,GA3ClDK,IAAMC,Y,gBC2CZC,E,uKAvCP,GAAGrB,KAAKC,MAAMC,KACV,CAAWF,KAAKC,MAAMC,KAAKC,KAA3B,IACImB,EAAMtB,KAAKC,MAAMC,KAAKoB,IACtBC,EAAQvB,KAAKC,MAAMC,KAAKqB,MACxBC,EAAiBxB,KAAKC,MAAMC,KAAKuB,eAGzC,OACI,6BAASV,GAAG,SACZ,yBAAKD,UAAU,OACZ,yBAAKA,UAAU,iBACZ,yBAAKY,IAAKC,IAAYC,IAAI,6BAE7B,yBAAKd,UAAU,wBAAwBG,MAAO,CAACY,YAAY,SACxD,wBAAIZ,MAAO,CAACa,UAAU,SAAtB,YAEA,uBAAGb,MAAO,CAACa,UAAU,SAAUR,GAC/B,yBAAKR,UAAU,MAAMG,MAAO,CAACa,UAAU,SACpC,yBAAKhB,UAAU,2BACZ,+CACI,qFACuD,6BACvD,8BAAOS,KAGd,yBAAKT,UAAU,oBACZ,2BACG,uBAAGF,KAAMY,EAAgBV,UAAU,UAAS,uBAAGA,UAAU,mBAAzD,6B,GA9BPK,IAAMC,WCgDXW,E,uKA/CP,GAAG/B,KAAKC,MAAMC,KACV,IAAI8B,EAAehC,KAAKC,MAAMC,KAAK8B,aAC/BC,EAAYjC,KAAKC,MAAMC,KAAK+B,UAAUxB,KAAI,SAASwB,GACnD,OAAO,yBAAKtB,IAAKsB,EAAUC,QAAQ,4BAAKD,EAAUC,QAClD,uBAAGpB,UAAU,QAAQmB,EAAUE,OAA/B,IAAuC,wCAAmB,wBAAIrB,UAAU,OAAOmB,EAAUG,YACzF,2BAAIH,EAAU5B,iBAEdgC,EAAOrC,KAAKC,MAAMC,KAAKmC,KAAK5B,KAAI,SAAS4B,GACzC,OAAO,yBAAK1B,IAAK0B,EAAKC,SAAS,4BAAKD,EAAKC,SACzC,uBAAGxB,UAAU,QAAQuB,EAAKrB,MAAM,wCAAhC,IAAoD,wBAAIF,UAAU,QAAQuB,EAAKE,QAC/E,2BAAIF,EAAKhC,iBAKjB,OACI,6BAASU,GAAG,UACR,2BAAIiB,GAEJ,yBAAKlB,UAAU,YACX,yBAAKA,UAAU,4BACX,4BAAI,8CAER,yBAAKA,UAAU,wBAAwBG,MAAO,CAACa,UAAU,SACpDO,IAIT,yBAAKvB,UAAU,iBACX,yBAAKA,UAAU,4BACX,4BAAI,6CAGR,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,iBAAiBG,MAAO,CAACa,UAAU,SAC7CG,W,GAtCZd,IAAMC,WC6CZoB,E,kDAvCb,WAAYvC,GAAO,IAAD,8BAChB,cAAMA,IACDwC,MAAQ,CACXC,IAAK,MACLC,WAAY,IAJE,E,4DAShBC,IAAEC,KAAK,CACLhC,IAAI,oBACJiC,SAAS,OACTC,OAAO,EACPC,QAAS,SAAS9C,GAChBF,KAAKiD,SAAS,CAACN,WAAYzC,KAC3BgD,KAAKlD,MACPmD,MAAO,SAASC,EAAKC,EAAQC,GAC3BC,QAAQC,IAAIF,GACZG,MAAMH,Q,0CAMVtD,KAAK0D,kB,+BAIL,OACE,yBAAK5C,UAAU,OACb,kBAAC,EAAD,CAAQZ,KAAMF,KAAKyC,MAAME,WAAWgB,OACpC,kBAAC,EAAD,CAAOzD,KAAMF,KAAKyC,MAAME,WAAWgB,OACnC,kBAAC,EAAD,CAAQzD,KAAMF,KAAKyC,MAAME,WAAWiB,c,GAjC1BzC,IAAMC,WCKJyC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA1B,GACLI,QAAQJ,MAAMA,EAAM2B,c","file":"static/js/main.c47515f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilepic.2327a78e.jpg\";","import React from 'react';\n\nclass Header extends React.Component {\n    render() {\n        if(this.props.data){\n            var name = this.props.data.name;\n            var occupation = this.props.data.occupation;\n            var description = this.props.data.description;\n            var city = this.props.data.city;\n            var networks = this.props.data.social.map(function(network){\n                return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n            })\n        }\n\n        return (\n            <header id=\"home\">\n            <nav id=\"nav-wrap\">\n\n                <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n\t            <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n                <div style={{backgroundColor:'#161415'}}>\n                <ul id=\"nav\" className=\"nav\">\n                    <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n                    <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n                    <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n                    <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n                    <li><a className=\"smoothscroll\" href=\"#more\">More</a></li>\n                </ul>\n                </div>\n\n            </nav>\n\n            <div className=\"row banner\">\n                <div className=\"banner-text\">\n                    <h1 className=\"responsive-headline\">I'm {name}.</h1>\n                    <h3>I'm a {city} based <span>{occupation}</span>. {description}.</h3>\n                    <hr />\n                    <ul className=\"social\">\n                        {networks}\n                    </ul>\n                </div>\n            </div>\n\n            <p className=\"scrolldown\">\n                <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n            </p>\n            </header>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\nimport profilepic from '../images/profilepic.jpg';\n\nclass About extends React.Component {\n    render() {\n\n        if(this.props.data){\n            var name = this.props.data.name;\n            var bio = this.props.data.bio;\n            var email = this.props.data.email;\n            var resumeDownload = this.props.data.resumedownload; // isn't linked to actual resume yet\n        }\n\n        return (\n            <section id=\"about\">\n            <div className=\"row\">\n               <div className=\"three columns\">\n                  <img src={profilepic} alt=\"Janice Tsai Profile Pic\" />\n               </div>\n               <div className=\"nine columns main-col\" style={{paddingLeft:'70px'}}>\n                  <h2 style={{textAlign:'left'}}>About Me</h2>\n      \n                  <p style={{textAlign:'left'}}>{bio}</p>\n                  <div className=\"row\" style={{textAlign:'left'}}>\n                     <div className=\"columns contact-details\">\n                        <h2>Contact Details</h2>\n                            <p>\n                            Feel free to contact me. I'd love to connect with you! <br></br>\n                            <span>{email}</span>\n                             </p>\n                     </div>\n                     <div className=\"columns download\">\n                        <p>\n                           <a href={resumeDownload} className=\"button\"><i className=\"fa fa-download\"></i>Download Resume</a>\n                        </p>\n                     </div>\n                  </div>\n               </div>\n            </div>\n      \n         </section>\n        );\n    }\n}\n\nexport default About;","import React from 'react';\n\nclass Resume extends React.Component {\n    render() {\n        if(this.props.data){\n            var skillmessage = this.props.data.skillmessage;\n            var education = this.props.data.education.map(function(education){\n                return <div key={education.school}><h3>{education.school}</h3>\n                <p className=\"info\">{education.degree} <span>&bull;</span><em className=\"dat\">{education.graduated}</em></p>\n                <p>{education.description}</p></div>\n            })\n            var work = this.props.data.work.map(function(work){\n                return <div key={work.company}><h3>{work.company}</h3>\n                <p className=\"info\">{work.title}<span>&bull;</span> <em className=\"date\">{work.years}</em></p>\n                <p>{work.description}</p>\n                </div>\n            })\n        }\n\n        return (\n            <section id=\"resume\">\n                <p>{skillmessage}</p>\n\n                <div className=\"row work\">\n                    <div className=\"three columns header-col\">\n                        <h1><span>Experience</span></h1>\n                    </div>\n                    <div className=\"nine columns main-col\" style={{textAlign:'left'}}>\n                        {work}\n                    </div>\n                </div>\n                \n                <div className=\"row education\">\n                    <div className=\"three columns header-col\">\n                        <h1><span>Education</span></h1>\n                    </div>\n\n                    <div className=\"nine columns main-col\">\n                        <div className=\"row item\">\n                            <div className=\"twelve columns\" style={{textAlign:'left'}}>\n                                {education}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </section>\n        );\n    }\n}\n\nexport default Resume;","import React from 'react';\nimport $ from 'jquery';\nimport './App.css';\nimport Header from './Components/Header';\nimport About from './Components/About';\nimport Resume from './Components/Resume';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      foo: 'bar',\n      resumeData: {}\n    };\n  }\n\n  getResumeData() {\n    $.ajax({\n      url:'./resumeData.json',\n      dataType:'json',\n      cache: false,\n      success: function(data){\n        this.setState({resumeData: data});\n      }.bind(this),\n      error: function(xhr, status, err){\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main}/>\n        <About data={this.state.resumeData.main}/>\n        <Resume data={this.state.resumeData.resume}/>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}